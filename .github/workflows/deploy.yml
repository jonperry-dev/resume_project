---
name: Deploy Fullstack Application to Google App Engine

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: Release tag to deploy
        required: false

  release:
    types:
      - published

jobs:
  cut-release-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Validate Release Tag
        id: validate_tag
        run: |
          RELEASE_TAG="${{ github.event.release.tag_name }}"

          # SemVer regex validation
          SEMVER_REGEX="^(v)?([0-9]+)(\.)([0-9]+)(\.)([0-9]+)(|-[a-z]+(\.)[0-9]+)$"

          if [[ ! "$RELEASE_TAG" =~ $SEMVER_REGEX ]]; then
            echo "Error: Release tag '$RELEASE_TAG' is not a valid Semantic Version."
            exit 1
          fi

          echo "Validated release tag: $RELEASE_TAG"
          echo "release_tag=$RELEASE_TAG" >> $GITHUB_ENV

      - name: Determine Release Tag
        id: determine_tag
        run: |
          if [ "${{ github.event_name }}" == "release" ]; then
            echo "Release event detected"
            echo "release_tag=${{ github.event.release.tag_name }}" >> $GITHUB_ENV
          elif [ -n "${{ github.event.inputs.release_tag }}" ]; then
            echo "Manual run with release tag input"
            echo "release_tag=${{ github.event.inputs.release_tag }}" >> $GITHUB_ENV
          else
            echo "Error: No release tag provided" >&2
            exit 1
          fi

  deploy-frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Configure gcloud
        run: |
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
          gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev

      - name: Deploy Frontend Services
        env:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          GCP_REGION: ${{ secrets.GCP_REGION }}
          IMAGE_NAME: frontend
          DOCKER_FILE: frontend.Dockerfile
        run: make gcp-deploy-frontend

  deploy-backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Configure gcloud
        run: |
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
          gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev

      - name: Deploy Backend Services
        env:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          GCP_REGION: ${{ secrets.GCP_REGION }}
        run: make gcp-deploy-backend
